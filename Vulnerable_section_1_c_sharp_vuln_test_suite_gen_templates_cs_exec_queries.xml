             try{
                 // create the ProcessStartInfo using "cmd" as the program to be run,
                 System.Diagnostics.ProcessStartInfo procStartInfo = new System.Diagnostics.ProcessStartInfo("cmd", "/c " + query);

                 // The following commands are needed to redirect the standard output.
                 procStartInfo.RedirectStandardOutput = true;
                 procStartInfo.UseShellExecute = false;

                 // Do not create the black window.
                 procStartInfo.CreateNoWindow = true;
                 // Create a process, assign its ProcessStartInfo and start it
                 System.Diagnostics.Process proc = new System.Diagnostics.Process();
                 proc.StartInfo = procStartInfo;
                 proc.Start();

                 // Get the output into a string
                 string result = proc.StandardOutput.ReadToEnd();

                 // Display the command output.
                 Console.WriteLine(result);
             }catch (Exception objException){
             }
         </code>
     </exec_query>
     <exec_query type="LDAP" safe="0">
         <path>
             <dir>ldap</dir>
             }
         </code>
     </exec_query>
     <exec_query type="SQL"  safe="0">
         <path>
             <dir>mysql</dir>
         <code>
             string connectionString = @"server=localhost;uid=mysql_user;password=mysql_password;database=dbname";
             MySqlConnection dbConnection = null;

             try {
                 dbConnection = new MySqlConnection(connectionString);
                 dbConnection.Open();
                 MySqlCommand cmd = dbConnection.CreateCommand();
                 cmd.CommandText = query;

                 MySqlDataReader reader = cmd.ExecuteReader();

                while (reader.Read())
                {
                     Console.WriteLine(reader.ToString());
                 }

                 dbConnection.Close();

             } catch (Exception e) {
                 Console.WriteLine(e.ToString());
             }

         </code>
     </exec_query>
     <exec_query type="SQL"  safe="0">
         <path>
             <dir>sql_server</dir>
         <code>
             string connectionString =  @"server=localhost;uid=sql_user;password=sql_password;database=dbname";
             SqlConnection dbConnection = null;

             try {
                 dbConnection = new SqlConnection(connectionString);
                 dbConnection.Open();
                 SqlCommand cmd = dbConnection.CreateCommand();
                 cmd.CommandText = query;

                 SqlDataReader reader = cmd.ExecuteReader();

                 while (reader.Read()){
                     Console.WriteLine(reader.ToString());
                 }

                 dbConnection.Close();
             } catch (Exception e) {
                 Console.WriteLine(e.ToString());
             try{
                 dbConnection = new SQLiteConnection("data source=C:\\data");
                 SQLiteCommand command = new SQLiteCommand(query, dbConnection);

                 SQLiteDataReader reader = command.ExecuteReader();

                 while (reader.Read()){
                     Console.WriteLine(reader.ToString());
                 }

                 dbConnection.Close();
             }catch(Exception e){
                 Console.WriteLine(e.ToString());
         <code>
             string connectionString = "Data Source=localhost;User ID=oracle_user;Password=oracle_password";
             OracleConnection dbConnection = null;

             try{
                 dbConnection = new OracleConnection(connectionString);
                 dbConnection.Open();

                 OracleCommand cmd = dbConnection.CreateCommand();
                 cmd.CommandText = query;

                 OracleDataReader reader = cmd.ExecuteReader();

                 while (reader.Read()){
                     Console.WriteLine(reader.ToString());
                 }

                 dbConnection.Close();

             }catch(Exception e){
                 Console.WriteLine(e.ToString());
             }
         </code>
     </exec_query>
     <exec_query type="SQL_prepared" safe="1">
         <path>
             <dir>mysql_prepared</dir>
         <code>
             string connectionString = @"server=localhost;uid=mysql_user;password=mysql_password;database=dbname";
             MySqlConnection dbConnection = null;

             try {
                 dbConnection = new MySqlConnection(connectionString);
                 dbConnection.Open();
                 MySqlCommand cmd = dbConnection.CreateCommand();
                 cmd = new MySqlCommand(query);
                 cmd.Parameters.AddWithValue("@placeholder",checked_data);
                 cmd.Prepare();

                 MySqlDataReader reader = cmd.ExecuteReader();

                while (reader.Read())
                {
                     Console.WriteLine(reader.ToString());
                 }

                 dbConnection.Close();

             } catch (Exception e) {
                 Console.WriteLine(e.ToString());
             }
         </code>
     </exec_query>
     <exec_query type="XPATH" safe="0">
         <path>
             <dir>xpath</dir>
             writer.Close( );
         </code>
     </exec_query>
     <exec_query type="XPATH_prepared" safe="1">
         <path>
             <dir>xpath_prepared</dir>
         </path>
         <comment>exec_query : xpath prepared statement</comment>
         <imports>
             <import>System.Xml</import>
             <import>System.Xml.XPath</import>
         </imports>
         <code>
             string filename = "file.xml";
            XmlDocument document = new XmlDocument( );
            document.Load(filename);
             XmlTextWriter writer = new XmlTextWriter(Console.Out);
             writer.Formatting = Formatting.Indented;

            XmlNode node = document.SelectSingleNode(string.Format(query),checked_data);
             node.WriteTo(writer);

             writer.Close( );
         </code>
     </exec_query>